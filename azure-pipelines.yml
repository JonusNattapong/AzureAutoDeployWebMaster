# Azure DevOps Pipeline for Azure AutoDeploy WebMaster
trigger:
  branches:
    include:
      - main
  paths:
    include:
      - src/*
      - package.json

variables:
  - name: buildConfiguration
    value: 'Release'
  - name: environment
    value: 'dev'
  - group: 'AutoDeploy-WebMaster-Secrets'

stages:
  - stage: Build
    displayName: 'Build and Test'
    jobs:
      - job: Build
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '18.x'
            displayName: 'Install Node.js'

          - script: npm install
            displayName: 'Install dependencies'

          - script: npm run build
            displayName: 'Build application'

          - script: npm test
            displayName: 'Run tests'

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: 'src'
              ArtifactName: 'webapp'
              publishLocation: 'Container'

  - stage: DeployDev
    displayName: 'Deploy to Dev'
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: Deploy
        environment: 'dev'
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: webapp
                - task: AzureWebApp@1
                  inputs:
                    azureSubscription: '$(AZURE_SERVICE_CONNECTION)'
                    appName: '$(APP_NAME)-dev'
                    package: '$(Pipeline.Workspace)/webapp'
                    runtimeStack: 'NODE|18-lts'

  - stage: DeployProd
    displayName: 'Deploy to Production'
    dependsOn: DeployDev
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:
      - deployment: Deploy
        environment: 'production'
        strategy:
          rolling:
            maxParallel: 2
            preDeploy:
              steps:
                - script: echo "Running pre-deployment checks"
            deploy:
              steps:
                - download: current
                  artifact: webapp
                - task: AzureWebApp@1
                  inputs:
                    azureSubscription: '$(AZURE_SERVICE_CONNECTION)'
                    appName: '$(APP_NAME)-prod'
                    package: '$(Pipeline.Workspace)/webapp'
                    runtimeStack: 'NODE|18-lts'
            postRouteTraffic:
              steps:
                - script: npm run health-check
                  env:
                    PORT: $(APP_PORT)